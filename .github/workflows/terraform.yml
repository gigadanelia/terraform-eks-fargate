name: Manage Terraform

on:
  # 1) Deploy on push to main
  push:
    branches:
      - main
  
  # 2) Destroy on manual dispatch
  workflow_dispatch:
    inputs:
      action:
        description: "Choose whether to deploy or destroy"
        required: true
        type: choice
        options:
          - deploy
          - destroy
        default: "deploy"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    # Only run this job if it's a push, OR if we manually set 'action=deploy'
    if: >
      (github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'deploy')

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.5

      - name: Terraform Init
        working-directory: ./env
        run: terraform init

      - name: Terraform Plan
        working-directory: ./env
        run: terraform plan -out=planfile

      - name: Terraform Apply
        working-directory: ./env
        run: terraform apply -auto-approve planfile

  destroy:
    name: Destroy
    runs-on: ubuntu-latest

    # Only run this job if the event is 'workflow_dispatch' AND 'action=destroy'
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.5

      - name: Terraform Init
        working-directory: ./env
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./env
        run: terraform destroy -auto-approve
